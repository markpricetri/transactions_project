{"version":3,"sources":["transactionData.js","components/transactions/TransactionDate.js","components/UI/Card.js","components/transactions/TransactionItem.js","utils/date_min_max.js","components/UI/Button.js","components/transactions/new_transaction/TransactionForm.js","components/transactions/new_transaction/NewTransaction.js","components/transactions/YearFilter.js","components/chart/ChartBar.js","components/chart/Chart.js","components/chart/TransactionsChart.js","components/transactions/Transactions.js","App.js","index.js"],"names":["transactions","id","title","amount","date","Date","module","exports","TransactionDate","props","month","getMonth","day","getDate","year","getFullYear","className","Card","classes","children","TransactionItem","useState","transactionName","setTransactionName","handleSubmit","setisNewInputOpen","isNewInputOpen","Fragment","onSubmit","htmlFor","type","name","value","onChange","e","target","handleChange","onClick","icon","faCheck","faEdit","parseFloat","toFixed","threeMonths","threeMonthsFromNow","getTime","threeMonthsAgo","Button","styled","button","TransactionForm","toISOString","slice","newTransaction","setNewTransaction","defaultValidity","isValid","setIsValid","preventDefault","Object","entries","key","values","includes","parseInt","onSaveTransactionData","prevState","console","log","closeForm","faTimes","min","step","max","NewTransaction","isFormOpen","setIsFormOpen","newTransactionData","formattedDate","finalTransactionData","onAddTransaction","YearFilter","onYearFilter","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","chartDataPoints","refreshChart","arrayOfTransactions","transaction","transactionMonth","TransactionsChart","data","require","Transactions","setTransactions","filter","setFilter","filteredTransactions","prevTransactions","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3db187a9.chunk.js","sourcesContent":["const transactions = [\n  {\n    id: 111216740742,\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(\"2020, 7, 14\"),\n  },\n  {\n    id: 111216740744,\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(\"2020, 7, 14\"),\n  },\n  {\n    id: 111216740745,\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(\"2021, 2, 28\"),\n  },\n  {\n    id: 111216740746,\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(\"2021, 5, 12\"),\n  },\n];\n\nmodule.exports = { transactions };","import React from \"react\"\nimport \"./TransactionDate.scss\";\n\n\nconst TransactionDate = (props) => {\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const month = months[new Date(props.date).getMonth()];\n  const day = new Date(props.date).getDate();\n  const year = new Date(props.date).getFullYear()\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default TransactionDate;","import React from \"react\";\n\nimport \"./Card.scss\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\n\nimport TransactionDate from \"./TransactionDate\";\nimport Card from \"../UI/Card\";\nimport \"./TransactionItem.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TransactionItem = (props) => {\n  const [transactionName, setTransactionName] = useState(props.title);\n\n  const handleClick = () => {\n   setisNewInputOpen(true);\n  };\n  \n  const handleSubmit = () => {\n    setisNewInputOpen(false);\n  }\n\n  const handleChange = (e) => {\n    setTransactionName(e.target.value);\n  };\n\n  const [isNewInputOpen, setisNewInputOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Card className=\"expense-item\">\n        <TransactionDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{transactionName}</h2>\n\n          <div className=\"expense-title-change-form\">\n            {isNewInputOpen && (\n              // SINGLE LINE FORM\n              <React.Fragment>\n                <form className=\"form newTitleForm\" onSubmit={handleSubmit}>\n                  <div className=\"form-control\">\n                    <label htmlFor=\"firstName\">\n                      Enter new transaction name:{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      name=\"title\"\n                      value={transactionName}\n                      onChange={(e) => handleChange(e)}\n                    />\n                    <button className=\"transaction-change-btn\" onClick={handleSubmit}><FontAwesomeIcon icon={faCheck} /></button>\n                  </div>\n                </form>\n              </React.Fragment>\n            )}\n          </div>\n\n          <button\n            onClick={handleClick}\n            className=\"transaction-btn\"\n            value={props.title}\n          >\n            <FontAwesomeIcon icon={faEdit} />\n          </button>\n          <div className=\"expense-item__price\">£{parseFloat(props.amount).toFixed(2)}</div>\n        </div>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default TransactionItem;\n","const date = new Date();\nconst threeMonths = 7889238000;\nconst threeMonthsFromNow = date.getTime() + threeMonths;\n\nconst threeMonthsAgo = date.getTime() - threeMonths;\n\nexport { threeMonthsAgo, threeMonthsFromNow };\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  font: inherit;\n  border: 1px solid var(--color-button-outline);\n  border-radius: 10px;\n  background: var(--color-button-background);\n  color: white;\n  padding: 0.25rem 1rem;\n  cursor: pointer;\n\n  &:hover,\n  &:active {\n    background: var(--color-button-background-active);\n    border-color: var(--color-button-background-active);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport default Button;","import React, { useState } from \"react\";\n\nimport { threeMonthsAgo, threeMonthsFromNow} from \"../../../utils/date_min_max\";\nimport \"./TransactionForm.scss\";\nimport Button from '../../UI/Button';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TransactionForm = (props) => {\n  const [newTransaction, setNewTransaction] = useState({\n    id: 0,\n    title: \"eg. Petrol\",\n    amount: \"40.00\",\n    date: new Date().toISOString().slice(0, 10),\n  });\n\n  let defaultValidity = {\n    title: true,\n    amount: true,\n    date: true,\n  };\n\n  const [isValid, setIsValid] = useState(defaultValidity);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    for (let [key] of Object.entries(defaultValidity)) {\n      if (!newTransaction[`${key}`]) {\n        defaultValidity[key] = false;\n      }\n    }\n    setIsValid(defaultValidity);\n    if (Object.values(defaultValidity).includes(false)) {\n      return;\n    } else {\n      setNewTransaction(() => {\n        return {\n          id: new Date().getTime(),\n          title: newTransaction.title,\n          amount: parseInt(newTransaction.amount),\n          date: newTransaction.date,\n        };\n      });\n      props.onSaveTransactionData(newTransaction);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === \"title\") {\n      setNewTransaction((prevState) => {\n        return {\n          ...prevState,\n          title: e.target.value,\n        };\n      });\n    } else if (e.target.name === \"amount\") {\n      setNewTransaction((prevState) => {\n        return {\n          ...prevState,\n          amount: e.target.value,\n        };\n      });\n    } else {\n      console.log(e.target.value);\n      setNewTransaction((prevState) => {\n        return {\n          ...prevState,\n          date: e.target.value,\n        };\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <button id=\"exit-button\" onClick={props.closeForm}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              className={`${!isValid.title ? \"invalid\" : \"\"}`}\n              type=\"text\"\n              name=\"title\"\n              value={newTransaction.title}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              className={`${!isValid.amount ? \"invalid\" : \"\"}`}\n              type=\"number\"\n              name=\"amount\"\n              value={newTransaction.amount}\n              min=\"0.01\"\n              step=\"0.01\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label htmlFor=\"amount\">Date</label>\n            <input\n              className={`${!isValid.date ? \"invalid\" : \"\"}`}\n              type=\"date\"\n              name=\"date\"\n              value={newTransaction.date}\n              min={threeMonthsAgo}\n              max={threeMonthsFromNow}\n              onChange={handleChange}\n            />\n          </div>\n          <Button type=\"sumbit\" onClick={handleSubmit}>\n            Add Transaction\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default TransactionForm;\n","import React, {useState} from 'react';\nimport TransactionForm from './TransactionForm';\nimport Button from '../../UI/Button'\nimport './NewTransaction.scss'\n\nconst NewTransaction = (props) => {\n  const saveTransactionDataHandler = (newTransactionData) => {\n    const formattedDate = new Date(newTransactionData.date);\n    const finalTransactionData = {...newTransactionData, date: formattedDate};\n    console.log(finalTransactionData);\n    props.onAddTransaction(finalTransactionData);\n  };\n\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  \n  const handleClick = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false)\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {isFormOpen && <TransactionForm onSaveTransactionData={saveTransactionDataHandler} closeForm={closeForm}/>}\n      {!isFormOpen && <Button onClick={handleClick}>Add Transaction</Button>}\n    </div>\n  )\n};\n\nexport default NewTransaction;","import React from 'react';\nimport './YearFilter.scss';\n\nconst YearFilter = (props) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleChange = (e) => {\n    console.log(parseInt(e.target.value))\n    props.onYearFilter(parseInt(e.target.value));\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"filter-div\">\n        <div className=\"filter-title\">\n          <h4>Filter</h4>\n        </div>\n        <form className=\"drop-down\" onSubmit={handleSubmit}>\n          <select type=\"text\" id=\"year\" name=\"year\" onChange={handleChange}>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n            <option value=\"2018\">2018</option>\n          </select>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default YearFilter;","import React from 'react'\nimport './ChartBar.scss'\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n  \n  if (props.maxValue > 0) {\n    barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n          <div\n            className=\"chart-bar__fill\"\n            style={{ height: barFillHeight }}\n          ></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ChartBar;","import React from 'react'\nimport ChartBar from './ChartBar'\nimport './Chart.scss'\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <React.Fragment>\n      <div className=\"chart\">\n        {props.dataPoints.map((dataPoint) => {\n          return (\n            <ChartBar \n              key={dataPoint.label} \n              value={dataPoint.value} \n              maxValue={totalMaximum} \n              label={dataPoint.label}\n            />\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Chart;","import React from 'react';\nimport Chart from './Chart';\n\nconst chartDataPoints = [\n  { label: 'Jan', value: 0 },\n  { label: 'Feb', value: 0 },\n  { label: 'Mar', value: 0 },\n  { label: 'Apr', value: 0 },\n  { label: 'May', value: 0 },\n  { label: 'Jun', value: 0 },\n  { label: 'Jul', value: 0 },\n  { label: 'Aug', value: 0 },\n  { label: 'Sep', value: 0 },\n  { label: 'Oct', value: 0 },\n  { label: 'Nov', value: 0 },\n  { label: 'Dec', value: 0 },\n];\n\nconst refreshChart = (arrayOfTransactions) => {\n  chartDataPoints.map((month) => month.value = 0);\n  for (const transaction of arrayOfTransactions) {\n    const transactionMonth = new Date(transaction.date).getMonth();\n    chartDataPoints[transactionMonth].value += transaction.amount;\n  };\n  return chartDataPoints;\n}\n\nconst TransactionsChart = (props) => {\n  return <Chart dataPoints={refreshChart(props.transactions)} />;\n};\n\nexport { refreshChart };\nexport default TransactionsChart;","import React, { useState } from \"react\";\n\nimport TransactionItem from \"./TransactionItem\";\nimport NewTransaction from \"./new_transaction/NewTransaction\";\nimport YearFilter from \"./YearFilter\";\nimport Card from \"../UI/Card\";\nimport TransactionsChart, { refreshChart } from '../chart/TransactionsChart';\nimport \"./Transactions.scss\";\nconst data = require(\"../../transactionData\");\n\nconst Transactions = (props) => {\n  const [transactions, setTransactions] = useState(data.transactions);\n\n  const [filter, setFilter] = useState(new Date().getFullYear())\n\n  const addTransactionHandler = (transaction) => {\n    setFilter(transaction.date.getFullYear());\n    setTransactions((prevTransactions) => {\n      return [transaction, ...prevTransactions];\n    });\n  };\n\n  const applyFilter = (year) => {\n    setFilter(year);\n    refreshChart(filteredTransactions);\n  };\n\n  const filteredTransactions = transactions.filter((transaction) => new Date(transaction.date).getFullYear() === filter);\n\n  return (\n    <React.Fragment>\n      <NewTransaction onAddTransaction={addTransactionHandler}/>\n      <TransactionsChart transactions={filteredTransactions}/>\n      <Card className=\"expenses\">\n        <YearFilter onYearFilter={applyFilter}/>\n        {filteredTransactions.length === 0 && \n          <p className=\"list-fallback\">\n            No transactions to display...\n          </p>}\n        {filteredTransactions.map((transaction) => {\n          return (\n            <TransactionItem\n              key={transaction.id}\n              className=\"expense-item\"\n              title={transaction.title}\n              amount={transaction.amount}\n              date={transaction.date}\n            />\n          );\n        })}\n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default Transactions;\n","import React from 'react'\nimport Transactions from \"./components/transactions/Transactions\";\n\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      \n      <Transactions />\n    </React.Fragment>\n  );\n\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}